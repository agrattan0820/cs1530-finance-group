import router from "next/router";
import { useSupabaseClient, useUser } from "@supabase/auth-helpers-react";
import { useEffect, useState } from "react";
import Head from "next/head";
import Header from "../components/header";
import { FaUser } from "react-icons/fa";

const DashboardPage = () => {
  const supabase = useSupabaseClient();
  const user = useUser();

  type pageTypes = "dashboard" | "grades" | "colleges";

  const [pageName, setPageName] = useState<pageTypes>("dashboard");

  async function signOut() {
    const { error } = await supabase.auth.signOut();
  }

  async function selectDashboard() {
    setPageName("dashboard");
  }

  async function selectGrades() {
    setPageName("grades");
  }

  async function selectColleges() {
    setPageName("colleges");
  }

  async function selectGetGrade() {
    router.push(`/`);
  }

  useEffect(() => {
    if (!user) {
      router.push("/");
    }
  }, [user]);

  return (
    <div>
      <Head>
        <title>Dashboard - GradeMyAid</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main className="min-h-screen bg-green-100">
        <div className="container mx-auto flex min-h-screen flex-col items-center justify-center px-4 text-center">
          <div className="mx-auto mb-4 space-y-2">
            {user?.user_metadata.avatar_url ? (
              <img
                src={user?.user_metadata.avatar_url}
                alt={`Avatar image for the user ${user?.email}`}
              />
            ) : (
              <div className="mx-auto flex h-24 w-24 items-center justify-center rounded-full bg-emerald-700">
                <FaUser color="white" size={40} />
              </div>
            )}
            <h2 className="font-bold">
              {user?.user_metadata.full_name ?? user?.email}
            </h2>
          </div>
          <div className="w-45 flex justify-between rounded-full bg-emerald-300">
            {/* Start Side Bar element */}
            <div className="flex flex-wrap gap-4 px-4 py-2">
              {/* Start dashboard sidebar element*/}
              <button
                className={`rounded-full p-2 font-bold transition-colors hover:text-emerald-900 ${
                  pageName === "dashboard" && "bg-emerald-200"
                }`}
                onClick={selectDashboard}
              >
                Dashboard
              </button>
              {/* End dashboard sidebar element*/}

              {/* Start Saved Grades side bar element */}
              <button
                className={`rounded-full p-2 font-bold transition-colors hover:text-emerald-900 ${
                  pageName === "grades" && "bg-emerald-200"
                }`}
                onClick={selectGrades}
              >
                Saved Grades
              </button>
              {/* End Saved Grades side bar element*/}

              {/* Start Saved Colleges side bar element */}
              <button
                className={`rounded-full p-2 font-bold transition-colors hover:text-emerald-900 ${
                  pageName === "colleges" && "bg-emerald-200"
                }`}
                onClick={selectColleges}
              >
                Saved Colleges
              </button>
              {/* End Saved Colleges side bar element */}

              {/* Start Grade side bar element */}

              <button
                className={`rounded-full p-2 transition-colors hover:text-emerald-900`}
                onClick={selectGetGrade}
              >
                <b>Get Grade </b>
              </button>
              {/* End Grade side bar element */}
            </div>
            {/* End Dashboard Side Bar element */}
          </div>
          <div>
            {
              // === compares types as well as the value
              pageName === "dashboard" && (
                <div className="flex items-center justify-center">
                  <button
                    className="boarder rounded-full bg-green-400 py-2 hover:text-white"
                    onClick={signOut}
                  >
                    <b>Logout</b>
                  </button>
                </div>
              )
            }

            {
              // === compares types as well as the value
              pageName === "grades" && (
                <div>Hello this is the Saved Grade Page </div>
              )
            }

            {
              // === compares types as well as the value
              pageName === "colleges" && (
                <div>Hello this is the Saved College Page</div>
              )
            }
          </div>
        </div>
      </main>
    </div>
  );
};

export default DashboardPage;
